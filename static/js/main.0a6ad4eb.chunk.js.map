{"version":3,"sources":["components/Navbar.js","components/Textfrom.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode","htmlFor","Textfrom","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","rows","value","backgroundColor","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","split","map","word","charAt","slice","join","length","defaultProps","Alert","alert","role","lower","capital","msg","App","setMode","_useState3","_useState4","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0a6ad4eb.chunk.js","sourcesContent":["import React from 'react'\r\nimport  PropTypes from 'react'\r\n// import {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n    <div>\r\n        <nav className={`navbar navbar-expand-lg bg-body-tertiary navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light'?'Dark':'Light'} Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string,\r\n    about : PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Naman\",\r\n    about : \"About Us\"\r\n}","import React from 'react'\r\nimport PropTypes from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nexport default function Textfrom(props) {\r\n    const [text, setText] = useState(\"Enter text here\");\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"Changed\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCapClick = (event)=>{\r\n        let newText = text\r\n                    .toLowerCase()\r\n                    .split(' ')\r\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n                    .join(' ');\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Capitalized\", \"success\");\r\n    }\r\n    const handleClearClick = (event)=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n  return (\r\n    <>\r\n        <div>      \r\n            <div className=\"mb-3\"  style = {{color: props.mode === 'light'?'black':'white'}}>\r\n            <h1>{props.heading}</h1>\r\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"3\" value={text} style = {{backgroundColor: props.mode === 'light'?'white':'grey'}} onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Change to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Change to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCapClick}>Capitalised</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-3\"  style = {{color: props.mode === 'light'?'black':'white'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>Characters {text.length}, Words {text.split(' ').length}</p>\r\n            <p>{(text.split(\" \").length) * 0.008} Minutes</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nTextfrom.propTypes = {\r\n    heading : PropTypes.string\r\n}\r\n\r\nTextfrom.defaultProps = {\r\n    heading : \"Enter text below\"\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capital = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n    }\r\n  return (\r\n    props.alert && <div>\r\n        <div className={`alert alert-${props.alert.type} alert-secondary`} role=\"alert\">\r\n            <strong>{capital(props.alert.type)}</strong> {props.alert.msg} \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textfrom from './components/Textfrom';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type)=>{\n      setalert({\n          msg : message,\n          type: type\n      })\n      setTimeout(() => {\n        setalert(null);\n      }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode is enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggleMode} />\n      <Alert alert = {alert} />\n      <div className=\"container\">\n      <Textfrom heading = \"Enter Text\" mode = {mode} showAlert = {showAlert} />\n        {/* <Router>\n          <Routes>\n              <Route path=\"/about\" element={<About/>}/>\n              <Route path=\"/\" element={<Textfrom heading = \"Enter Text\" mode = {mode} showAlert = {showAlert} />}/>\n          </Routes>\n        </Router> */}\n      </div>\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n  \nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}